Option Explicit

' ====== USER SETTINGS ======
Private Const SHEET_NAME As String = "Sheet1"
Private Const NAME_COL As Long = 1                  ' Column A
Private Const ENGINE As String = "https://www.google.com/search?q="
Private Const ENGINE_SUFFIX As String = "&hl=en&gl=IN&pws=0" ' helpful stabilizers

' ====== ENTRY POINT ======
Sub SaveSearchesAsPDF_AndOpenFolder()
    Dim ws As Worksheet
    Dim lastRow As Long, r As Long
    Dim q As String, url As String
    Dim edgePath As String
    Dim outDir As String, pdfPath As String

    On Error GoTo Fail
    Set ws = ThisWorkbook.Worksheets(SHEET_NAME)
    lastRow = ws.Cells(ws.Rows.Count, NAME_COL).End(xlUp).Row
    If lastRow < 1 Then
        MsgBox "No names found in " & SHEET_NAME & ".", vbExclamation
        Exit Sub
    End If

    edgePath = GetEdgeExePath()
    If Len(edgePath) = 0 Then
        MsgBox "Microsoft Edge (msedge.exe) not found.", vbCritical
        Exit Sub
    End If

    outDir = ThisWorkbook.Path & "\SearchPDFs"
    EnsureFolder outDir

    For r = 1 To lastRow
        q = Trim$(CStr(ws.Cells(r, NAME_COL).Value))
        If Len(q) = 0 Then GoTo NextRow

        url = ENGINE & UrlEncode(q) & ENGINE_SUFFIX
        pdfPath = outDir & "\" & Left$(SafeFileName(q), 150) & ".pdf"

        PrintUrlToPdf edgePath, url, pdfPath
        WaitForFile pdfPath, 12   ' wait up to 12s for file to appear

NextRow:
        DoEvents
    Next r

    ' ===== Open File Explorer at the output folder =====
    Shell "explorer.exe " & """" & outDir & """", vbNormalFocus
    MsgBox "Done! Saved PDFs to:" & vbCrLf & outDir, vbInformation
    Exit Sub

Fail:
    MsgBox "Error " & Err.Number & ": " & Err.Description, vbCritical
End Sub

' ====== HEADLESS PRINT VIA EDGE ======
Private Sub PrintUrlToPdf(ByVal edgePath As String, ByVal url As String, ByVal pdfPath As String)
    Dim cmd As String
    On Error Resume Next
    If Len(Dir$(pdfPath, vbNormal)) > 0 Then Kill pdfPath
    On Error GoTo 0

    cmd = """" & edgePath & """" & _
          " --headless=new --disable-gpu --no-sandbox " & _
          " --print-to-pdf=" & """" & pdfPath & """" & _
          " " & """" & url & """"
    Shell cmd, vbHide
End Sub

' ====== HELPERS ======
Private Function GetEdgeExePath() As String
    Dim p As String
    p = Environ$("ProgramFiles") & "\Microsoft\Edge\Application\msedge.exe"
    If FileExists(p) Then GetEdgeExePath = p: Exit Function
    p = Environ$("ProgramFiles(x86)") & "\Microsoft\Edge\Application\msedge.exe"
    If FileExists(p) Then GetEdgeExePath = p: Exit Function
    GetEdgeExePath = vbNullString
End Function

Private Sub EnsureFolder(ByVal folderPath As String)
    If Len(Dir$(folderPath, vbDirectory)) = 0 Then MkDir folderPath
End Sub

Private Function FileExists(ByVal fullPath As String) As Boolean
    On Error Resume Next
    FileExists = (Len(Dir$(fullPath, vbNormal)) > 0)
    On Error GoTo 0
End Function

Private Sub WaitForFile(ByVal fullPath As String, ByVal maxSeconds As Long)
    Dim t As Date
    t = Now + TimeSerial(0, 0, maxSeconds)
    Do
        If Len(Dir$(fullPath, vbNormal)) > 0 Then Exit Sub
        DoEvents
        ' small pause
        Dim pause As Date: pause = Now + TimeSerial(0, 0, 1)
        Do While Now < pause: DoEvents: Loop
    Loop While Now < t
End Sub

Private Function UrlEncode(ByVal s As String) As String
    Dim i As Long, ch As String, code As Long, out As String
    For i = 1 To Len(s)
        ch = Mid$(s, i, 1)
        code = AscW(ch)
        Select Case code
            Case 48 To 57, 65 To 90, 97 To 122      ' 0-9 A-Z a-z
                out = out & ch
            Case 45, 46, 95, 126                    ' - . _ ~
                out = out & ch
            Case 32                                  ' space -> +
                out = out & "+"
            Case Else
                out = out & "%" & Right$("0" & Hex(code And &HFF), 2)
        End Select
    Next i
    UrlEncode = out
End Function

Private Function SafeFileName(ByVal s As String) As String
    Dim bad As Variant, i As Long, r As String
    r = Trim$(s)
    bad = Array("\", "/", ":", "*", "?", """", "<", ">", "|")
    For i = LBound(bad) To UBound(bad)
        r = Replace$(r, CStr(bad(i)), "_")
    Next i
    If Len(r) = 0 Then r = "Search"
    SafeFileName = r
End Function
